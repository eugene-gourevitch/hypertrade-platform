name: Deploy to Staging

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: hypertrade-staging
  REGION: us-central1

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Configure Docker
      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      # Build and push Docker image with PR number tag
      - name: Build and Push Docker Image
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || 'manual' }}
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:pr-$PR_NUMBER-$GITHUB_SHA .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:pr-$PR_NUMBER-$GITHUB_SHA

      # Deploy to staging
      - name: Deploy to Staging
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || 'manual' }}
          
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:pr-$PR_NUMBER-$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 2 \
            --min-instances 0 \
            --timeout 60 \
            --set-env-vars NODE_ENV=staging \
            --set-env-vars DATABASE_URL="${{ secrets.STAGING_DATABASE_URL }}" \
            --set-env-vars HYPERLIQUID_TESTNET=true \
            --set-env-vars HYPERLIQUID_ACCOUNT_ADDRESS="${{ secrets.STAGING_HYPERLIQUID_ADDRESS }}" \
            --set-env-vars HYPERLIQUID_API_SECRET="${{ secrets.STAGING_HYPERLIQUID_SECRET }}" \
            --set-env-vars ANTHROPIC_API_KEY="${{ secrets.ANTHROPIC_API_KEY }}" \
            --set-env-vars VITE_WALLETCONNECT_PROJECT_ID="${{ secrets.VITE_WALLETCONNECT_PROJECT_ID }}"

      # Get staging URL
      - name: Get Staging URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
            --platform managed \
            --region $REGION \
            --format 'value(status.url)')
          echo "STAGING_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
        id: staging

      # Comment on PR with staging URL
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const stagingUrl = '${{ steps.staging.outputs.STAGING_URL }}';
            const body = `ðŸš€ **Staging deployment ready!**\n\n` +
                        `Preview your changes at: ${stagingUrl}\n\n` +
                        `Deployment details:\n` +
                        `- Commit: \`${context.sha.substring(0, 7)}\`\n` +
                        `- Environment: Staging (Testnet)\n` +
                        `- Region: ${{ env.REGION }}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
